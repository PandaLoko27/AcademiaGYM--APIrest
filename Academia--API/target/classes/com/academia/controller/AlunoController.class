package com.academia.controller;

import com.academia.model.Aluno;
import com.academia.repository.AlunoRepository;
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping({"/api/alunos"})
public class AlunoController {
   @Autowired
   private AlunoRepository alunoRepository;

   public AlunoController() {
   }

   @GetMapping
   public List<Aluno> listarAlunos() {
      return this.alunoRepository.findAll();
   }

   @GetMapping({"/{id}"})
   public Optional<Aluno> buscarPorId(@PathVariable Long id) {
      return this.alunoRepository.findById(id);
   }

   @PostMapping
   public Aluno criar(@RequestBody Aluno aluno) {
      return (Aluno)this.alunoRepository.save(aluno);
   }

   @PutMapping({"/{id}"})
   public Aluno atualizar(@PathVariable Long id, @RequestBody Aluno aluno) {
      return (Aluno)this.alunoRepository.findById(id).map((alunoExistente) -> {
         alunoExistente.setNome(aluno.getNome());
         alunoExistente.setEmail(aluno.getEmail());
         alunoExistente.setDataNascimento(aluno.getDataNascimento());
         alunoExistente.setPlano(aluno.getPlano());
         alunoExistente.setTreinos(aluno.getTreinos());
         return (Aluno)this.alunoRepository.save(alunoExistente);
      }).orElseThrow(() -> {
         return new RuntimeException("Aluno n√£o encontrado");
      });
   }

   @DeleteMapping({"/{id}"})
   public void deletar(@PathVariable Long id) {
      this.alunoRepository.deleteById(id);
   }
}
