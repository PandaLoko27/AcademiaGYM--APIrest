package com.academia.controller;

import com.academia.model.Instrutor;
import com.academia.repository.InstrutorRepository;
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping({"/api/instrutores"})
public class InstrutorController {
   @Autowired
   private InstrutorRepository instrutorRepository;

   public InstrutorController() {
   }

   @GetMapping
   public List<Instrutor> listarInstrutores() {
      return this.instrutorRepository.findAll();
   }

   @GetMapping({"/{id}"})
   public Optional<Instrutor> buscarPorId(@PathVariable Long id) {
      return this.instrutorRepository.findById(id);
   }

   @PostMapping
   public Instrutor criar(@RequestBody Instrutor instrutor) {
      return (Instrutor)this.instrutorRepository.save(instrutor);
   }

   @PutMapping({"/{id}"})
   public Instrutor atualizar(@PathVariable Long id, @RequestBody Instrutor instrutor) {
      return (Instrutor)this.instrutorRepository.findById(id).map((i) -> {
         i.setNome(instrutor.getNome());
         i.setEspecialidade(instrutor.getEspecialidade());
         return (Instrutor)this.instrutorRepository.save(i);
      }).orElseThrow(() -> {
         return new RuntimeException("Instrutor n√£o encontrado");
      });
   }

   @DeleteMapping({"/{id}"})
   public void deletar(@PathVariable Long id) {
      this.instrutorRepository.deleteById(id);
   }

   @GetMapping({"/lista"})
   public List<Instrutor> listarTodos() {
      return this.instrutorRepository.findAll();
   }
}
